/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Approval.ApprovalInterface;
import Login.LoginManager;
import java.awt.Color;
import java.awt.Font;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JLabel;

public class ApprovalForm extends javax.swing.JFrame {

    public static JCheckBox[] checks;

    public static ApprovalInterface AI;

    public ApprovalForm() throws IOException {
        initComponents();
        this.setSize(1366, 768);
        setDefaultCloseOperation(ApprovalForm.EXIT_ON_CLOSE);
    }

    public void BuildForm() throws FileNotFoundException, IOException {

        AI = new ApprovalInterface();
        ArrayList<String> Games = AI.requestWaitingGames();
        checks = new JCheckBox[Games.size()];
        for (int i = 0; i < Games.size(); i++) {
            checks[i] = new JCheckBox(Games.get(i));
            checks[i].setSize(1366, 50);
            checks[i].setLocation(600, 100 + (i * 50));
            checks[i].setName(Games.get(i));
            checks[i].setOpaque(false);
            Font font = new Font("Tahoma", Font.BOLD, 16);
            checks[i].setFont(font);
            checks[i].setForeground(Color.white);
            this.add(checks[i]);
        }
        Approve.setSize(200, 40);
        Approve.setBackground(Color.black);
        Approve.setLocation(583, 100 + (50 * Games.size()));
        homePage.setSize(200, 40);
        homePage.setBackground(Color.black);
        homePage.setLocation(583, 100 + (50 * (Games.size()+1)));
        JLabel Background = new javax.swing.JLabel();
        Background.setIcon(new javax.swing.ImageIcon("src\\Forms\\The Brain.jpg")); // NOI18N
        getContentPane().add(Background);
        Background.setSize(1366, 768);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Approve = new javax.swing.JButton();
        homePage = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Approve.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Approve.setForeground(new java.awt.Color(255, 255, 255));
        Approve.setText("Approve");
        Approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveActionPerformed(evt);
            }
        });
        getContentPane().add(Approve);
        Approve.setBounds(150, 230, 200, 31);

        homePage.setBackground(new java.awt.Color(0, 0, 0));
        homePage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        homePage.setForeground(new java.awt.Color(255, 255, 255));
        homePage.setText("Log Out");
        homePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageActionPerformed(evt);
            }
        });
        getContentPane().add(homePage);
        homePage.setBounds(583, 540, 200, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveActionPerformed
        // TODO add your handling code here:
        ArrayList<String> newGames = new ArrayList<>();
        ArrayList<String> ignoredGames = new ArrayList<>();
        for (JCheckBox check : checks) {
            if (check.isSelected()) {
                newGames.add(check.getText());
            } else {
                ignoredGames.add(check.getText());
            }
        }
        this.setVisible(false);
        try {
            AI.PressButtonSubmit(newGames, ignoredGames);
        } catch (IOException ex) {
            Logger.getLogger(ApprovalForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        HomePage Form = new HomePage();
        Form.setVisible(true);
    }//GEN-LAST:event_ApproveActionPerformed

    private void homePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageActionPerformed
        // TODO add your handling code here:
        HomePage HP = new HomePage();
        HP.setVisible(true);
        this.setVisible(false);
        LoginManager.user = null ;
    }//GEN-LAST:event_homePageActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Approve;
    private javax.swing.JToggleButton homePage;
    // End of variables declaration//GEN-END:variables
}
